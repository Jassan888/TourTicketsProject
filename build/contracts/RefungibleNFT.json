{
  "contractName": "RefungibleNFT",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nftId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_icoSharePrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_icoShareSupply",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "daiAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dai",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "icoEnd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "icoSharePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "icoShareSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nft",
      "outputs": [
        {
          "internalType": "contract IERC721",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startIco",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shareAmount",
          "type": "uint256"
        }
      ],
      "name": "buyShare",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawProfits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.3+commit.9bfce1f6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_icoSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_icoShareSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"daiAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shareAmount\",\"type\":\"uint256\"}],\"name\":\"buyShare\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dai\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"icoEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"icoSharePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"icoShareSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startIco\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawProfits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/jeffrey/TourTicketsProject/contracts/RFT.sol\":\"RefungibleNFT\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/jeffrey/TourTicketsProject/contracts/RFT.sol\":{\"keccak256\":\"0xdba0ccd36f807040e889cb073dfbbbb527f78f07ef2e38c753a9ce3ac3bdf286\",\"urls\":[\"bzz-raw://6feefb0f955a6ff5aff105d5aacce60b34f5b98192fc7f643b8fa364e7ff2182\",\"dweb:/ipfs/QmeHuS6j5Qri31q1UwUpdx9ad9ZggXL5mBF5wgWPFhnKBg\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x910a2e625b71168563edf9eeef55a50d6d699acfe27ceba3921f291829a8f938\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://248246ac66e6479dce1ad7d4945ec5540c98ceb09881e93c93f7c48d5772925c\",\"dweb:/ipfs/QmXr8tmUiZgEYid6ixeeBRmTdUnASWjKzhP3KRxMPy8fRt\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xd2f30fad5b24c4120f96dbac83aacdb7993ee610a9092bc23c44463da292bf8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3d4e72409e392c7694b6405a0136cf073d8da016df33ef8f9ad195f724ebfea\",\"dweb:/ipfs/QmPGcddKq6CgsiKnxUUif2q76wRqP3dmdQ6bKuHCLmb8Wa\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xba96bc371ba999f452985a98717cca1e4c4abb598dc038a9a9c3db08129b1ba4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e50e3f7b6482fb6f598f2e006994a74aa492687daa4b3eee7fd4fb5398ce7f\",\"dweb:/ipfs/QmZudqoPSkA4USLMFsBBmt19dDPZFS8aaAmL5R7pECXu6t\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xf1ac0ee2ca2b36f90574d3b2b37422ced4fa829741d80794c62f5958a2d8f474\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d527ba022dc8eb272c76aa637913aa261e37847e5b465404328af1916fec55e2\",\"dweb:/ipfs/Qmei5afXj1pbucjpi7N3Epjb4o5AuzYXsSaUgYZmdPJHbu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d0913dfbfce90d170df0d496ad7596c0778518e5fa7aba6c32562522546f66b\",\"dweb:/ipfs/QmR6B8nLj2PJf5e1JWD9Nk7ErkAwkqUwadCnvE82FJr1RU\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5fd853592d6a9a1d1fdd6bd258098fb0f4632a32ea90f565661c9ba3191b5a1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b1ae36e53cab51ce9094557f8f759288768d2ae5fa117cb7ef1edf697cc7c85\",\"dweb:/ipfs/QmS2cpinhv9DLtAQAwFpR5gTr3Q8mWwWu2t39RAzgQCkjY\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x698f929f1097637d051976b322a2d532c27df022b09010e8d091e2888a5ebdf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4bd4c9419d1182612ef415c60a83a9039b227fccb799937963448114c0473b58\",\"dweb:/ipfs/Qmat1U571v55F5JDDHHX7igGcmLF8Ehk9CzsWpjbdx3RTH\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "201:1625:3:-:0;;;404:404;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;607:5;614:7;2086:4:10;2078:5;:12;;;;;;;;;;;;:::i;:::-;;2110:6;2100:7;:16;;;;;;;;;;;;:::i;:::-;;2138:2;2126:9;;:14;;;;;;;;;;;;;;;;;;2013:134;;638:5:3::1;;631;:12;;;;664:11;650:3;;:26;;;;;;;;;;;;;;;;;;698:14;683:13;:29;;;;735:15;719:14;:31;;;;769:10;757:3;;:23;;;;;;;;;;;;;;;;;;794:10;787:5;;:17;;;;;;;;;;;;;;;;;;404:404:::0;;;;;;;201:1625;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "201:1625:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;293:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2212:81:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4248:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3255:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4874:317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3114:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5586:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1396:425:3;;;:::i;:::-;;336:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;236:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3411:117:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;812:180:3;;;:::i;:::-;;2406:85:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6288:266;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3731:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;996:396:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;316:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3961:149:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;357:17:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;379:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;264:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;293:18;;;;:::o;2212:81:10:-;2249:13;2281:5;2274:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2212:81;:::o;4248:166::-;4331:4;4347:39;4356:12;:10;:12::i;:::-;4370:7;4379:6;4347:8;:39::i;:::-;4403:4;4396:11;;4248:166;;;;:::o;3255:98::-;3308:7;3334:12;;3327:19;;3255:98;:::o;4874:317::-;4980:4;4996:36;5006:6;5014:9;5025:6;4996:9;:36::i;:::-;5042:121;5051:6;5059:12;:10;:12::i;:::-;5073:89;5111:6;5073:89;;;;;;;;;;;;;;;;;:11;:19;5085:6;5073:19;;;;;;;;;;;;;;;:33;5093:12;:10;:12::i;:::-;5073:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5042:8;:121::i;:::-;5180:4;5173:11;;4874:317;;;;;:::o;3114:81::-;3155:5;3179:9;;;;;;;;;;;3172:16;;3114:81;:::o;5586:215::-;5674:4;5690:83;5699:12;:10;:12::i;:::-;5713:7;5722:50;5761:10;5722:11;:25;5734:12;:10;:12::i;:::-;5722:25;;;;;;;;;;;;;;;:34;5748:7;5722:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5690:8;:83::i;:::-;5790:4;5783:11;;5586:215;;;;:::o;1396:425:3:-;1460:5;;;;;;;;;;;1446:19;;:10;:19;;;1438:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1513:6;;1495:15;:24;1487:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1551:15;1568:3;;;;;;;;;;;:13;;;1590:4;1568:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1551:45;;1619:1;1606:10;:14;1603:69;;;1633:3;;;;;;;;;;;:12;;;1646:5;;;;;;;;;;;1653:10;1633:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1603:69;1678:23;1720:13;:11;:13::i;:::-;1703:14;;:30;1678:55;;1764:1;1743:18;:22;1740:78;;;1777:33;1783:5;;;;;;;;;;;1791:18;1777:5;:33::i;:::-;1740:78;1396:425;;:::o;336:18::-;;;;;;;;;;;;;:::o;236:25::-;;;;:::o;3411:117:10:-;3477:7;3503:9;:18;3513:7;3503:18;;;;;;;;;;;;;;;;3496:25;;3411:117;;;:::o;812:180:3:-;870:5;;;;;;;;;;;856:19;;:10;:19;;;848:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;897:3;;;;;;;;;;;:16;;;914:10;934:4;940:5;;897:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;979:9;961:15;:27;953:6;:35;;;;812:180::o;2406:85:10:-;2445:13;2477:7;2470:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2406:85;:::o;6288:266::-;6381:4;6397:129;6406:12;:10;:12::i;:::-;6420:7;6429:96;6468:15;6429:96;;;;;;;;;;;;;;;;;:11;:25;6441:12;:10;:12::i;:::-;6429:25;;;;;;;;;;;;;;;:34;6455:7;6429:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6397:8;:129::i;:::-;6543:4;6536:11;;6288:266;;;;:::o;3731:172::-;3817:4;3833:42;3843:12;:10;:12::i;:::-;3857:9;3868:6;3833:9;:42::i;:::-;3892:4;3885:11;;3731:172;;;;:::o;996:396:3:-;1065:1;1056:6;;:10;1048:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1125:6;;1106:15;:25;;1098:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1197:14;;1182:11;1166:13;:11;:13::i;:::-;:27;:45;;1158:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1248:14;1278:13;;1264:11;:27;1248:43;;1298:3;;;;;;;;;;;:16;;;1315:10;1335:4;1341:9;1298:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1358:30;1364:10;1376:11;1358:5;:30::i;:::-;996:396;;:::o;316:17::-;;;;:::o;3961:149:10:-;4050:7;4076:11;:18;4088:5;4076:18;;;;;;;;;;;;;;;:27;4095:7;4076:27;;;;;;;;;;;;;;;;4069:34;;3961:149;;;;:::o;357:17:3:-;;;;;;;;;;;;;:::o;379:20::-;;;;;;;;;;;;;:::o;264:26::-;;;;:::o;590:104:6:-;643:15;677:10;670:17;;590:104;:::o;9350:340:10:-;9468:1;9451:19;;:5;:19;;;;9443:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9548:1;9529:21;;:7;:21;;;;9521:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9630:6;9600:11;:18;9612:5;9600:18;;;;;;;;;;;;;;;:27;9619:7;9600:27;;;;;;;;;;;;;;;:36;;;;9667:7;9651:32;;9660:5;9651:32;;;9676:6;9651:32;;;;;;;;;;;;;;;;;;9350:340;;;:::o;7028:530::-;7151:1;7133:20;;:6;:20;;;;7125:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7234:1;7213:23;;:9;:23;;;;7205:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7287:47;7308:6;7316:9;7327:6;7287:20;:47::i;:::-;7365:71;7387:6;7365:71;;;;;;;;;;;;;;;;;:9;:17;7375:6;7365:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7345:9;:17;7355:6;7345:17;;;;;;;;;;;;;;;:91;;;;7469:32;7494:6;7469:9;:20;7479:9;7469:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7446:9;:20;7456:9;7446:20;;;;;;;;;;;;;;;:55;;;;7533:9;7516:35;;7525:6;7516:35;;;7544:6;7516:35;;;;;;;;;;;;;;;;;;7028:530;;;:::o;1746:187:9:-;1832:7;1864:1;1859;:6;;1867:12;1851:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1890:9;1906:1;1902;:5;1890:17;;1925:1;1918:8;;;1746:187;;;;;:::o;874:176::-;932:7;951:9;967:1;963;:5;951:17;;991:1;986;:6;;978:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:1;1035:8;;;874:176;;;;:::o;7828:370:10:-;7930:1;7911:21;;:7;:21;;;;7903:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7979:49;8008:1;8012:7;8021:6;7979:20;:49::i;:::-;8054:24;8071:6;8054:12;;:16;;:24;;;;:::i;:::-;8039:12;:39;;;;8109:30;8132:6;8109:9;:18;8119:7;8109:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;8088:9;:18;8098:7;8088:18;;;;;;;;;;;;;;;:51;;;;8175:7;8154:37;;8171:1;8154:37;;;8184:6;8154:37;;;;;;;;;;;;;;;;;;7828:370;;:::o;10688:92::-;;;;:::o",
  "source": "pragma solidity ^0.7.3;\r\n\r\nimport'@openzeppelin/contracts/token/ERC721/IERC721.sol';\r\nimport'@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport'@openzeppelin/contracts/token/ERC20/ERC20.sol';\r\n\r\ncontract RefungibleNFT is ERC20 {\r\nuint public icoSharePrice;\r\nuint public icoShareSupply;\r\nuint public icoEnd;\r\n\r\nuint public nftId;\r\nIERC721 public nft;\r\nIERC20 public dai;\r\n\r\naddress public admin;\r\n\r\nconstructor(\r\n    string memory _name, \r\n    string memory _symbol,\r\n    address _nftAddress,\r\n    uint _nftId,\r\n    uint _icoSharePrice, \r\n    uint _icoShareSupply,\r\n    address daiAddress\r\n) \r\n\r\nERC20(_name, _symbol)\r\n{\r\n    nftId= nftId;\r\n    nft = IERC721(_nftAddress);\r\n    icoSharePrice= _icoSharePrice;\r\n    icoShareSupply= _icoShareSupply;\r\n    dai= IERC20(daiAddress);\r\n    admin= msg.sender;\r\n}\r\n\r\nfunction startIco() external {\r\n    require(msg.sender == admin, 'only admin');\r\n    nft.transferFrom(msg.sender, address(this),nftId);\r\n    icoEnd= block.timestamp + 7 * 86400;\r\n}\r\n\r\nfunction buyShare(uint shareAmount) external {\r\n    require(icoEnd > 0, 'Has not started yet.');\r\n    require(block.timestamp <= icoEnd, 'ICO is finished');\r\n    require(totalSupply() + shareAmount <= icoShareSupply, 'not enoungh shares left');\r\n\r\n    uint daiAmount= shareAmount * icoSharePrice;\r\n    dai.transferFrom(msg.sender, address(this),daiAmount);\r\n    _mint(msg.sender, shareAmount);\r\n}\r\n\r\nfunction withdrawProfits() external{\r\n    require(msg.sender == admin, 'only admin');\r\n    require(block.timestamp > icoEnd, 'ICO not finished yet');\r\n    uint daiBalance= dai.balanceOf(address(this));\r\n    if(daiBalance > 0) {\r\n        dai.transfer(admin, daiBalance);\r\n    }\r\n    uint unsoldShareBalance= icoShareSupply - totalSupply();\r\n    if(unsoldShareBalance > 0){\r\n        _mint(admin , unsoldShareBalance);\r\n    }\r\n}\r\n\r\n}",
  "sourcePath": "C:/Users/jeffrey/TourTicketsProject/contracts/RFT.sol",
  "ast": {
    "absolutePath": "/C/Users/jeffrey/TourTicketsProject/contracts/RFT.sol",
    "exportedSymbols": {
      "Address": [
        2649
      ],
      "Context": [
        472
      ],
      "ERC20": [
        1244
      ],
      "IERC165": [
        541
      ],
      "IERC20": [
        1322
      ],
      "IERC721": [
        2369
      ],
      "RefungibleNFT": [
        312
      ],
      "SafeMath": [
        737
      ]
    },
    "id": 313,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 94,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 95,
        "nodeType": "ImportDirective",
        "scope": 313,
        "sourceUnit": 2370,
        "src": "27:57:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 96,
        "nodeType": "ImportDirective",
        "scope": 313,
        "sourceUnit": 1323,
        "src": "86:55:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 97,
        "nodeType": "ImportDirective",
        "scope": 313,
        "sourceUnit": 1245,
        "src": "143:54:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 98,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1244,
              "src": "227:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1244",
                "typeString": "contract ERC20"
              }
            },
            "id": 99,
            "nodeType": "InheritanceSpecifier",
            "src": "227:5:3"
          }
        ],
        "contractDependencies": [
          472,
          1244,
          1322
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 312,
        "linearizedBaseContracts": [
          312,
          1244,
          1322,
          472
        ],
        "name": "RefungibleNFT",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "57b6e966",
            "id": 101,
            "mutability": "mutable",
            "name": "icoSharePrice",
            "nodeType": "VariableDeclaration",
            "scope": 312,
            "src": "236:25:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 100,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "236:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ff83ab29",
            "id": 103,
            "mutability": "mutable",
            "name": "icoShareSupply",
            "nodeType": "VariableDeclaration",
            "scope": 312,
            "src": "264:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 102,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "264:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0563451a",
            "id": 105,
            "mutability": "mutable",
            "name": "icoEnd",
            "nodeType": "VariableDeclaration",
            "scope": 312,
            "src": "293:18:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 104,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "293:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c6bc5182",
            "id": 107,
            "mutability": "mutable",
            "name": "nftId",
            "nodeType": "VariableDeclaration",
            "scope": 312,
            "src": "316:17:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 106,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "316:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "47ccca02",
            "id": 109,
            "mutability": "mutable",
            "name": "nft",
            "nodeType": "VariableDeclaration",
            "scope": 312,
            "src": "336:18:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC721_$2369",
              "typeString": "contract IERC721"
            },
            "typeName": {
              "id": 108,
              "name": "IERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2369,
              "src": "336:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721_$2369",
                "typeString": "contract IERC721"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f4b9fa75",
            "id": 111,
            "mutability": "mutable",
            "name": "dai",
            "nodeType": "VariableDeclaration",
            "scope": 312,
            "src": "357:17:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1322",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 110,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1322,
              "src": "357:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1322",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f851a440",
            "id": 113,
            "mutability": "mutable",
            "name": "admin",
            "nodeType": "VariableDeclaration",
            "scope": 312,
            "src": "379:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 112,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "379:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 163,
              "nodeType": "Block",
              "src": "624:184:3",
              "statements": [
                {
                  "expression": {
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 134,
                      "name": "nftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "631:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 135,
                      "name": "nftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "638:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "631:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "631:12:3"
                },
                {
                  "expression": {
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 138,
                      "name": "nft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 109,
                      "src": "650:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721_$2369",
                        "typeString": "contract IERC721"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 140,
                          "name": "_nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 119,
                          "src": "664:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 139,
                        "name": "IERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2369,
                        "src": "656:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC721_$2369_$",
                          "typeString": "type(contract IERC721)"
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "656:20:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721_$2369",
                        "typeString": "contract IERC721"
                      }
                    },
                    "src": "650:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$2369",
                      "typeString": "contract IERC721"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "650:26:3"
                },
                {
                  "expression": {
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 144,
                      "name": "icoSharePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "683:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 145,
                      "name": "_icoSharePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123,
                      "src": "698:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "683:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "683:29:3"
                },
                {
                  "expression": {
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 148,
                      "name": "icoShareSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103,
                      "src": "719:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 149,
                      "name": "_icoShareSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 125,
                      "src": "735:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "719:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "719:31:3"
                },
                {
                  "expression": {
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 152,
                      "name": "dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "757:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1322",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 154,
                          "name": "daiAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 127,
                          "src": "769:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 153,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1322,
                        "src": "762:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1322_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "762:18:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1322",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "757:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1322",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "757:23:3"
                },
                {
                  "expression": {
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 158,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "787:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 159,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "794:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "794:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "787:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "787:17:3"
                }
              ]
            },
            "id": 164,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 130,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 115,
                    "src": "607:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 131,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 117,
                    "src": "614:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 132,
                "modifierName": {
                  "id": 129,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1244,
                  "src": "601:5:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$1244_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "601:21:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 115,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "422:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "422:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "449:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "449:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119,
                  "mutability": "mutable",
                  "name": "_nftAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "477:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "477:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 121,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "503:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "503:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "_icoSharePrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "521:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "521:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 125,
                  "mutability": "mutable",
                  "name": "_icoShareSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "548:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 127,
                  "mutability": "mutable",
                  "name": "daiAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "575:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "575:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "415:181:3"
            },
            "returnParameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "624:0:3"
            },
            "scope": 312,
            "src": "404:404:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 196,
              "nodeType": "Block",
              "src": "841:151:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 168,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "856:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "856:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 170,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 113,
                          "src": "870:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "856:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c792061646d696e",
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "877:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
                          "typeString": "literal_string \"only admin\""
                        },
                        "value": "only admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
                          "typeString": "literal_string \"only admin\""
                        }
                      ],
                      "id": 167,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "848:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "848:42:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "848:42:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 178,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "914:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "914:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 182,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "934:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RefungibleNFT_$312",
                              "typeString": "contract RefungibleNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RefungibleNFT_$312",
                              "typeString": "contract RefungibleNFT"
                            }
                          ],
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "926:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 180,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "926:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "926:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 184,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "940:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 175,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "897:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$2369",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2322,
                      "src": "897:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "897:49:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "897:49:3"
                },
                {
                  "expression": {
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 187,
                      "name": "icoEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "953:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 188,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "961:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "961:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_rational_604800_by_1",
                          "typeString": "int_const 604800"
                        },
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "37",
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "979:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_7_by_1",
                            "typeString": "int_const 7"
                          },
                          "value": "7"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3836343030",
                          "id": 191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "983:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_86400_by_1",
                            "typeString": "int_const 86400"
                          },
                          "value": "86400"
                        },
                        "src": "979:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_604800_by_1",
                          "typeString": "int_const 604800"
                        }
                      },
                      "src": "961:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "953:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 195,
                  "nodeType": "ExpressionStatement",
                  "src": "953:35:3"
                }
              ]
            },
            "functionSelector": "89311e6f",
            "id": 197,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "startIco",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "829:2:3"
            },
            "returnParameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "841:0:3"
            },
            "scope": 312,
            "src": "812:180:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 251,
              "nodeType": "Block",
              "src": "1041:351:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 203,
                          "name": "icoEnd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105,
                          "src": "1056:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1065:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1056:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "486173206e6f742073746172746564207965742e",
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1068:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c31c503af92af723fd3cd6e66ee08dcd2cc5e63e2b8fbf4d49d29d34e53e4479",
                          "typeString": "literal_string \"Has not started yet.\""
                        },
                        "value": "Has not started yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c31c503af92af723fd3cd6e66ee08dcd2cc5e63e2b8fbf4d49d29d34e53e4479",
                          "typeString": "literal_string \"Has not started yet.\""
                        }
                      ],
                      "id": 202,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1048:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1048:43:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "1048:43:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 210,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1106:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1106:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 212,
                          "name": "icoEnd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105,
                          "src": "1125:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1106:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "49434f2069732066696e6973686564",
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1133:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2884622f410af05d7ee38b44b39b8e20487fbd844c71937776ef2148d1cb2bbc",
                          "typeString": "literal_string \"ICO is finished\""
                        },
                        "value": "ICO is finished"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2884622f410af05d7ee38b44b39b8e20487fbd844c71937776ef2148d1cb2bbc",
                          "typeString": "literal_string \"ICO is finished\""
                        }
                      ],
                      "id": 209,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1098:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1098:53:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 216,
                  "nodeType": "ExpressionStatement",
                  "src": "1098:53:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 218,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 830,
                              "src": "1166:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1166:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 220,
                            "name": "shareAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 199,
                            "src": "1182:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1166:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 222,
                          "name": "icoShareSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 103,
                          "src": "1197:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1166:45:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f756e676820736861726573206c656674",
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1213:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b8c571018ea48af46392a9cae6292ca49b1a4e6cf7247128b268ebb5b65ae3a8",
                          "typeString": "literal_string \"not enoungh shares left\""
                        },
                        "value": "not enoungh shares left"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b8c571018ea48af46392a9cae6292ca49b1a4e6cf7247128b268ebb5b65ae3a8",
                          "typeString": "literal_string \"not enoungh shares left\""
                        }
                      ],
                      "id": 217,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1158:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1158:81:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "1158:81:3"
                },
                {
                  "assignments": [
                    228
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 228,
                      "mutability": "mutable",
                      "name": "daiAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 251,
                      "src": "1248:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 227,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1248:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 232,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 229,
                      "name": "shareAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 199,
                      "src": "1264:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 230,
                      "name": "icoSharePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "1278:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1264:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1248:43:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 236,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1315:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1315:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 240,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1335:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RefungibleNFT_$312",
                              "typeString": "contract RefungibleNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RefungibleNFT_$312",
                              "typeString": "contract RefungibleNFT"
                            }
                          ],
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1327:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 238,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1327:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1327:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 242,
                        "name": "daiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "1341:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 233,
                        "name": "dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "1298:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1322",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1303,
                      "src": "1298:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1298:53:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "1298:53:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 246,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1364:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1364:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 248,
                        "name": "shareAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 199,
                        "src": "1376:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 245,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1120,
                      "src": "1358:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1358:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 250,
                  "nodeType": "ExpressionStatement",
                  "src": "1358:30:3"
                }
              ]
            },
            "functionSelector": "a9ed6e9a",
            "id": 252,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyShare",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 199,
                  "mutability": "mutable",
                  "name": "shareAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "1014:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 198,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1014:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1013:18:3"
            },
            "returnParameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1041:0:3"
            },
            "scope": 312,
            "src": "996:396:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 310,
              "nodeType": "Block",
              "src": "1431:390:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 256,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1446:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1446:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 258,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 113,
                          "src": "1460:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1446:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c792061646d696e",
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1467:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
                          "typeString": "literal_string \"only admin\""
                        },
                        "value": "only admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
                          "typeString": "literal_string \"only admin\""
                        }
                      ],
                      "id": 255,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1438:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1438:42:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 262,
                  "nodeType": "ExpressionStatement",
                  "src": "1438:42:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 264,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1495:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1495:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 266,
                          "name": "icoEnd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105,
                          "src": "1513:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1495:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "49434f206e6f742066696e697368656420796574",
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1521:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ff946fc478d0a307519403e80cafe66856ebc8e0a7fa5356e73d820da7c0103",
                          "typeString": "literal_string \"ICO not finished yet\""
                        },
                        "value": "ICO not finished yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ff946fc478d0a307519403e80cafe66856ebc8e0a7fa5356e73d820da7c0103",
                          "typeString": "literal_string \"ICO not finished yet\""
                        }
                      ],
                      "id": 263,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1487:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1487:57:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 270,
                  "nodeType": "ExpressionStatement",
                  "src": "1487:57:3"
                },
                {
                  "assignments": [
                    272
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 272,
                      "mutability": "mutable",
                      "name": "daiBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 310,
                      "src": "1551:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 271,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1551:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 280,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 277,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1590:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RefungibleNFT_$312",
                              "typeString": "contract RefungibleNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RefungibleNFT_$312",
                              "typeString": "contract RefungibleNFT"
                            }
                          ],
                          "id": 276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1582:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 275,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1582:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1582:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 273,
                        "name": "dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "1568:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1322",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1261,
                      "src": "1568:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1568:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1551:45:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 281,
                      "name": "daiBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 272,
                      "src": "1606:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1619:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1606:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 292,
                  "nodeType": "IfStatement",
                  "src": "1603:69:3",
                  "trueBody": {
                    "id": 291,
                    "nodeType": "Block",
                    "src": "1622:50:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 287,
                              "name": "admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 113,
                              "src": "1646:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 288,
                              "name": "daiBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 272,
                              "src": "1653:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 284,
                              "name": "dai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 111,
                              "src": "1633:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1322",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1271,
                            "src": "1633:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1633:31:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 290,
                        "nodeType": "ExpressionStatement",
                        "src": "1633:31:3"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    294
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 294,
                      "mutability": "mutable",
                      "name": "unsoldShareBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 310,
                      "src": "1678:23:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 293,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1678:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 299,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 295,
                      "name": "icoShareSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103,
                      "src": "1703:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 296,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 830,
                        "src": "1720:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1720:13:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1703:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1678:55:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 300,
                      "name": "unsoldShareBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 294,
                      "src": "1743:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1764:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1743:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 309,
                  "nodeType": "IfStatement",
                  "src": "1740:78:3",
                  "trueBody": {
                    "id": 308,
                    "nodeType": "Block",
                    "src": "1766:52:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 304,
                              "name": "admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 113,
                              "src": "1783:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 305,
                              "name": "unsoldShareBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 294,
                              "src": "1791:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 303,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1120,
                            "src": "1777:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1777:33:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 307,
                        "nodeType": "ExpressionStatement",
                        "src": "1777:33:3"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "39913e09",
            "id": 311,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawProfits",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1420:2:3"
            },
            "returnParameters": {
              "id": 254,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1431:0:3"
            },
            "scope": 312,
            "src": "1396:425:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 313,
        "src": "201:1625:3"
      }
    ],
    "src": "0:1826:3"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/jeffrey/TourTicketsProject/contracts/RFT.sol",
      "exportedSymbols": {
        "Address": [
          2649
        ],
        "Context": [
          472
        ],
        "ERC20": [
          1244
        ],
        "IERC165": [
          541
        ],
        "IERC20": [
          1322
        ],
        "IERC721": [
          2369
        ],
        "RefungibleNFT": [
          312
        ],
        "SafeMath": [
          737
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".3"
          ]
        },
        "id": 94,
        "name": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "attributes": {
          "SourceUnit": 2370,
          "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
          "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
          "scope": 313,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 95,
        "name": "ImportDirective",
        "src": "27:57:3"
      },
      {
        "attributes": {
          "SourceUnit": 1323,
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "scope": 313,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 96,
        "name": "ImportDirective",
        "src": "86:55:3"
      },
      {
        "attributes": {
          "SourceUnit": 1245,
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "scope": 313,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 97,
        "name": "ImportDirective",
        "src": "143:54:3"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            472,
            1244,
            1322
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            312,
            1244,
            1322,
            472
          ],
          "name": "RefungibleNFT",
          "scope": 313
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ERC20",
                  "referencedDeclaration": 1244,
                  "type": "contract ERC20"
                },
                "id": 98,
                "name": "UserDefinedTypeName",
                "src": "227:5:3"
              }
            ],
            "id": 99,
            "name": "InheritanceSpecifier",
            "src": "227:5:3"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "57b6e966",
              "mutability": "mutable",
              "name": "icoSharePrice",
              "scope": 312,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 100,
                "name": "ElementaryTypeName",
                "src": "236:4:3"
              }
            ],
            "id": 101,
            "name": "VariableDeclaration",
            "src": "236:25:3"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "ff83ab29",
              "mutability": "mutable",
              "name": "icoShareSupply",
              "scope": 312,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 102,
                "name": "ElementaryTypeName",
                "src": "264:4:3"
              }
            ],
            "id": 103,
            "name": "VariableDeclaration",
            "src": "264:26:3"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "0563451a",
              "mutability": "mutable",
              "name": "icoEnd",
              "scope": 312,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 104,
                "name": "ElementaryTypeName",
                "src": "293:4:3"
              }
            ],
            "id": 105,
            "name": "VariableDeclaration",
            "src": "293:18:3"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "c6bc5182",
              "mutability": "mutable",
              "name": "nftId",
              "scope": 312,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 106,
                "name": "ElementaryTypeName",
                "src": "316:4:3"
              }
            ],
            "id": 107,
            "name": "VariableDeclaration",
            "src": "316:17:3"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "47ccca02",
              "mutability": "mutable",
              "name": "nft",
              "scope": 312,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract IERC721",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "IERC721",
                  "referencedDeclaration": 2369,
                  "type": "contract IERC721"
                },
                "id": 108,
                "name": "UserDefinedTypeName",
                "src": "336:7:3"
              }
            ],
            "id": 109,
            "name": "VariableDeclaration",
            "src": "336:18:3"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "f4b9fa75",
              "mutability": "mutable",
              "name": "dai",
              "scope": 312,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract IERC20",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "IERC20",
                  "referencedDeclaration": 1322,
                  "type": "contract IERC20"
                },
                "id": 110,
                "name": "UserDefinedTypeName",
                "src": "357:6:3"
              }
            ],
            "id": 111,
            "name": "VariableDeclaration",
            "src": "357:17:3"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "f851a440",
              "mutability": "mutable",
              "name": "admin",
              "scope": 312,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 112,
                "name": "ElementaryTypeName",
                "src": "379:7:3"
              }
            ],
            "id": 113,
            "name": "VariableDeclaration",
            "src": "379:20:3"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 312,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_name",
                      "scope": 164,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 114,
                        "name": "ElementaryTypeName",
                        "src": "422:6:3"
                      }
                    ],
                    "id": 115,
                    "name": "VariableDeclaration",
                    "src": "422:19:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_symbol",
                      "scope": 164,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 116,
                        "name": "ElementaryTypeName",
                        "src": "449:6:3"
                      }
                    ],
                    "id": 117,
                    "name": "VariableDeclaration",
                    "src": "449:21:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_nftAddress",
                      "scope": 164,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 118,
                        "name": "ElementaryTypeName",
                        "src": "477:7:3"
                      }
                    ],
                    "id": 119,
                    "name": "VariableDeclaration",
                    "src": "477:19:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_nftId",
                      "scope": 164,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 120,
                        "name": "ElementaryTypeName",
                        "src": "503:4:3"
                      }
                    ],
                    "id": 121,
                    "name": "VariableDeclaration",
                    "src": "503:11:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_icoSharePrice",
                      "scope": 164,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 122,
                        "name": "ElementaryTypeName",
                        "src": "521:4:3"
                      }
                    ],
                    "id": 123,
                    "name": "VariableDeclaration",
                    "src": "521:19:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_icoShareSupply",
                      "scope": 164,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 124,
                        "name": "ElementaryTypeName",
                        "src": "548:4:3"
                      }
                    ],
                    "id": 125,
                    "name": "VariableDeclaration",
                    "src": "548:20:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "daiAddress",
                      "scope": 164,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 126,
                        "name": "ElementaryTypeName",
                        "src": "575:7:3"
                      }
                    ],
                    "id": 127,
                    "name": "VariableDeclaration",
                    "src": "575:18:3"
                  }
                ],
                "id": 128,
                "name": "ParameterList",
                "src": "415:181:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 133,
                "name": "ParameterList",
                "src": "624:0:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1244,
                      "type": "type(contract ERC20)",
                      "value": "ERC20"
                    },
                    "id": 129,
                    "name": "Identifier",
                    "src": "601:5:3"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 115,
                      "type": "string memory",
                      "value": "_name"
                    },
                    "id": 130,
                    "name": "Identifier",
                    "src": "607:5:3"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 117,
                      "type": "string memory",
                      "value": "_symbol"
                    },
                    "id": 131,
                    "name": "Identifier",
                    "src": "614:7:3"
                  }
                ],
                "id": 132,
                "name": "ModifierInvocation",
                "src": "601:21:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 107,
                              "type": "uint256",
                              "value": "nftId"
                            },
                            "id": 134,
                            "name": "Identifier",
                            "src": "631:5:3"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 107,
                              "type": "uint256",
                              "value": "nftId"
                            },
                            "id": 135,
                            "name": "Identifier",
                            "src": "638:5:3"
                          }
                        ],
                        "id": 136,
                        "name": "Assignment",
                        "src": "631:12:3"
                      }
                    ],
                    "id": 137,
                    "name": "ExpressionStatement",
                    "src": "631:12:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract IERC721"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 109,
                              "type": "contract IERC721",
                              "value": "nft"
                            },
                            "id": 138,
                            "name": "Identifier",
                            "src": "650:3:3"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract IERC721",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2369,
                                  "type": "type(contract IERC721)",
                                  "value": "IERC721"
                                },
                                "id": 139,
                                "name": "Identifier",
                                "src": "656:7:3"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 119,
                                  "type": "address",
                                  "value": "_nftAddress"
                                },
                                "id": 140,
                                "name": "Identifier",
                                "src": "664:11:3"
                              }
                            ],
                            "id": 141,
                            "name": "FunctionCall",
                            "src": "656:20:3"
                          }
                        ],
                        "id": 142,
                        "name": "Assignment",
                        "src": "650:26:3"
                      }
                    ],
                    "id": 143,
                    "name": "ExpressionStatement",
                    "src": "650:26:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 101,
                              "type": "uint256",
                              "value": "icoSharePrice"
                            },
                            "id": 144,
                            "name": "Identifier",
                            "src": "683:13:3"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 123,
                              "type": "uint256",
                              "value": "_icoSharePrice"
                            },
                            "id": 145,
                            "name": "Identifier",
                            "src": "698:14:3"
                          }
                        ],
                        "id": 146,
                        "name": "Assignment",
                        "src": "683:29:3"
                      }
                    ],
                    "id": 147,
                    "name": "ExpressionStatement",
                    "src": "683:29:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 103,
                              "type": "uint256",
                              "value": "icoShareSupply"
                            },
                            "id": 148,
                            "name": "Identifier",
                            "src": "719:14:3"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 125,
                              "type": "uint256",
                              "value": "_icoShareSupply"
                            },
                            "id": 149,
                            "name": "Identifier",
                            "src": "735:15:3"
                          }
                        ],
                        "id": 150,
                        "name": "Assignment",
                        "src": "719:31:3"
                      }
                    ],
                    "id": 151,
                    "name": "ExpressionStatement",
                    "src": "719:31:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract IERC20"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 111,
                              "type": "contract IERC20",
                              "value": "dai"
                            },
                            "id": 152,
                            "name": "Identifier",
                            "src": "757:3:3"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract IERC20",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1322,
                                  "type": "type(contract IERC20)",
                                  "value": "IERC20"
                                },
                                "id": 153,
                                "name": "Identifier",
                                "src": "762:6:3"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 127,
                                  "type": "address",
                                  "value": "daiAddress"
                                },
                                "id": 154,
                                "name": "Identifier",
                                "src": "769:10:3"
                              }
                            ],
                            "id": 155,
                            "name": "FunctionCall",
                            "src": "762:18:3"
                          }
                        ],
                        "id": 156,
                        "name": "Assignment",
                        "src": "757:23:3"
                      }
                    ],
                    "id": 157,
                    "name": "ExpressionStatement",
                    "src": "757:23:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 113,
                              "type": "address",
                              "value": "admin"
                            },
                            "id": 158,
                            "name": "Identifier",
                            "src": "787:5:3"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 159,
                                "name": "Identifier",
                                "src": "794:3:3"
                              }
                            ],
                            "id": 160,
                            "name": "MemberAccess",
                            "src": "794:10:3"
                          }
                        ],
                        "id": 161,
                        "name": "Assignment",
                        "src": "787:17:3"
                      }
                    ],
                    "id": 162,
                    "name": "ExpressionStatement",
                    "src": "787:17:3"
                  }
                ],
                "id": 163,
                "name": "Block",
                "src": "624:184:3"
              }
            ],
            "id": 164,
            "name": "FunctionDefinition",
            "src": "404:404:3"
          },
          {
            "attributes": {
              "functionSelector": "89311e6f",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "startIco",
              "scope": 312,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 165,
                "name": "ParameterList",
                "src": "829:2:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 166,
                "name": "ParameterList",
                "src": "841:0:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
                                  "typeString": "literal_string \"only admin\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 167,
                            "name": "Identifier",
                            "src": "848:7:3"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -15,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 168,
                                    "name": "Identifier",
                                    "src": "856:3:3"
                                  }
                                ],
                                "id": 169,
                                "name": "MemberAccess",
                                "src": "856:10:3"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 113,
                                  "type": "address",
                                  "value": "admin"
                                },
                                "id": 170,
                                "name": "Identifier",
                                "src": "870:5:3"
                              }
                            ],
                            "id": 171,
                            "name": "BinaryOperation",
                            "src": "856:19:3"
                          },
                          {
                            "attributes": {
                              "hexvalue": "6f6e6c792061646d696e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"only admin\"",
                              "value": "only admin"
                            },
                            "id": 172,
                            "name": "Literal",
                            "src": "877:12:3"
                          }
                        ],
                        "id": 173,
                        "name": "FunctionCall",
                        "src": "848:42:3"
                      }
                    ],
                    "id": 174,
                    "name": "ExpressionStatement",
                    "src": "848:42:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transferFrom",
                              "referencedDeclaration": 2322,
                              "type": "function (address,address,uint256) external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 109,
                                  "type": "contract IERC721",
                                  "value": "nft"
                                },
                                "id": 175,
                                "name": "Identifier",
                                "src": "897:3:3"
                              }
                            ],
                            "id": 177,
                            "name": "MemberAccess",
                            "src": "897:16:3"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 178,
                                "name": "Identifier",
                                "src": "914:3:3"
                              }
                            ],
                            "id": 179,
                            "name": "MemberAccess",
                            "src": "914:10:3"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_RefungibleNFT_$312",
                                      "typeString": "contract RefungibleNFT"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 180,
                                    "name": "ElementaryTypeName",
                                    "src": "926:7:3"
                                  }
                                ],
                                "id": 181,
                                "name": "ElementaryTypeNameExpression",
                                "src": "926:7:3"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -28,
                                  "type": "contract RefungibleNFT",
                                  "value": "this"
                                },
                                "id": 182,
                                "name": "Identifier",
                                "src": "934:4:3"
                              }
                            ],
                            "id": 183,
                            "name": "FunctionCall",
                            "src": "926:13:3"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 107,
                              "type": "uint256",
                              "value": "nftId"
                            },
                            "id": 184,
                            "name": "Identifier",
                            "src": "940:5:3"
                          }
                        ],
                        "id": 185,
                        "name": "FunctionCall",
                        "src": "897:49:3"
                      }
                    ],
                    "id": 186,
                    "name": "ExpressionStatement",
                    "src": "897:49:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 105,
                              "type": "uint256",
                              "value": "icoEnd"
                            },
                            "id": 187,
                            "name": "Identifier",
                            "src": "953:6:3"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "+",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "timestamp",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -4,
                                      "type": "block",
                                      "value": "block"
                                    },
                                    "id": 188,
                                    "name": "Identifier",
                                    "src": "961:5:3"
                                  }
                                ],
                                "id": 189,
                                "name": "MemberAccess",
                                "src": "961:15:3"
                              },
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_604800_by_1",
                                    "typeString": "int_const 604800"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "operator": "*",
                                  "type": "int_const 604800"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "hexvalue": "37",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 7",
                                      "value": "7"
                                    },
                                    "id": 190,
                                    "name": "Literal",
                                    "src": "979:1:3"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "3836343030",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 86400",
                                      "value": "86400"
                                    },
                                    "id": 191,
                                    "name": "Literal",
                                    "src": "983:5:3"
                                  }
                                ],
                                "id": 192,
                                "name": "BinaryOperation",
                                "src": "979:9:3"
                              }
                            ],
                            "id": 193,
                            "name": "BinaryOperation",
                            "src": "961:27:3"
                          }
                        ],
                        "id": 194,
                        "name": "Assignment",
                        "src": "953:35:3"
                      }
                    ],
                    "id": 195,
                    "name": "ExpressionStatement",
                    "src": "953:35:3"
                  }
                ],
                "id": 196,
                "name": "Block",
                "src": "841:151:3"
              }
            ],
            "id": 197,
            "name": "FunctionDefinition",
            "src": "812:180:3"
          },
          {
            "attributes": {
              "functionSelector": "a9ed6e9a",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "buyShare",
              "scope": 312,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "shareAmount",
                      "scope": 252,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 198,
                        "name": "ElementaryTypeName",
                        "src": "1014:4:3"
                      }
                    ],
                    "id": 199,
                    "name": "VariableDeclaration",
                    "src": "1014:16:3"
                  }
                ],
                "id": 200,
                "name": "ParameterList",
                "src": "1013:18:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 201,
                "name": "ParameterList",
                "src": "1041:0:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c31c503af92af723fd3cd6e66ee08dcd2cc5e63e2b8fbf4d49d29d34e53e4479",
                                  "typeString": "literal_string \"Has not started yet.\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 202,
                            "name": "Identifier",
                            "src": "1048:7:3"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 105,
                                  "type": "uint256",
                                  "value": "icoEnd"
                                },
                                "id": 203,
                                "name": "Identifier",
                                "src": "1056:6:3"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 204,
                                "name": "Literal",
                                "src": "1065:1:3"
                              }
                            ],
                            "id": 205,
                            "name": "BinaryOperation",
                            "src": "1056:10:3"
                          },
                          {
                            "attributes": {
                              "hexvalue": "486173206e6f742073746172746564207965742e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Has not started yet.\"",
                              "value": "Has not started yet."
                            },
                            "id": 206,
                            "name": "Literal",
                            "src": "1068:22:3"
                          }
                        ],
                        "id": 207,
                        "name": "FunctionCall",
                        "src": "1048:43:3"
                      }
                    ],
                    "id": 208,
                    "name": "ExpressionStatement",
                    "src": "1048:43:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_2884622f410af05d7ee38b44b39b8e20487fbd844c71937776ef2148d1cb2bbc",
                                  "typeString": "literal_string \"ICO is finished\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 209,
                            "name": "Identifier",
                            "src": "1098:7:3"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "timestamp",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -4,
                                      "type": "block",
                                      "value": "block"
                                    },
                                    "id": 210,
                                    "name": "Identifier",
                                    "src": "1106:5:3"
                                  }
                                ],
                                "id": 211,
                                "name": "MemberAccess",
                                "src": "1106:15:3"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 105,
                                  "type": "uint256",
                                  "value": "icoEnd"
                                },
                                "id": 212,
                                "name": "Identifier",
                                "src": "1125:6:3"
                              }
                            ],
                            "id": 213,
                            "name": "BinaryOperation",
                            "src": "1106:25:3"
                          },
                          {
                            "attributes": {
                              "hexvalue": "49434f2069732066696e6973686564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"ICO is finished\"",
                              "value": "ICO is finished"
                            },
                            "id": 214,
                            "name": "Literal",
                            "src": "1133:17:3"
                          }
                        ],
                        "id": 215,
                        "name": "FunctionCall",
                        "src": "1098:53:3"
                      }
                    ],
                    "id": 216,
                    "name": "ExpressionStatement",
                    "src": "1098:53:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b8c571018ea48af46392a9cae6292ca49b1a4e6cf7247128b268ebb5b65ae3a8",
                                  "typeString": "literal_string \"not enoungh shares left\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 217,
                            "name": "Identifier",
                            "src": "1158:7:3"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "+",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "uint256",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 830,
                                          "type": "function () view returns (uint256)",
                                          "value": "totalSupply"
                                        },
                                        "id": 218,
                                        "name": "Identifier",
                                        "src": "1166:11:3"
                                      }
                                    ],
                                    "id": 219,
                                    "name": "FunctionCall",
                                    "src": "1166:13:3"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 199,
                                      "type": "uint256",
                                      "value": "shareAmount"
                                    },
                                    "id": 220,
                                    "name": "Identifier",
                                    "src": "1182:11:3"
                                  }
                                ],
                                "id": 221,
                                "name": "BinaryOperation",
                                "src": "1166:27:3"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 103,
                                  "type": "uint256",
                                  "value": "icoShareSupply"
                                },
                                "id": 222,
                                "name": "Identifier",
                                "src": "1197:14:3"
                              }
                            ],
                            "id": 223,
                            "name": "BinaryOperation",
                            "src": "1166:45:3"
                          },
                          {
                            "attributes": {
                              "hexvalue": "6e6f7420656e6f756e676820736861726573206c656674",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"not enoungh shares left\"",
                              "value": "not enoungh shares left"
                            },
                            "id": 224,
                            "name": "Literal",
                            "src": "1213:25:3"
                          }
                        ],
                        "id": 225,
                        "name": "FunctionCall",
                        "src": "1158:81:3"
                      }
                    ],
                    "id": 226,
                    "name": "ExpressionStatement",
                    "src": "1158:81:3"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        228
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "daiAmount",
                          "scope": 251,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 227,
                            "name": "ElementaryTypeName",
                            "src": "1248:4:3"
                          }
                        ],
                        "id": 228,
                        "name": "VariableDeclaration",
                        "src": "1248:14:3"
                      },
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "*",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 199,
                              "type": "uint256",
                              "value": "shareAmount"
                            },
                            "id": 229,
                            "name": "Identifier",
                            "src": "1264:11:3"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 101,
                              "type": "uint256",
                              "value": "icoSharePrice"
                            },
                            "id": 230,
                            "name": "Identifier",
                            "src": "1278:13:3"
                          }
                        ],
                        "id": 231,
                        "name": "BinaryOperation",
                        "src": "1264:27:3"
                      }
                    ],
                    "id": 232,
                    "name": "VariableDeclarationStatement",
                    "src": "1248:43:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transferFrom",
                              "referencedDeclaration": 1303,
                              "type": "function (address,address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 111,
                                  "type": "contract IERC20",
                                  "value": "dai"
                                },
                                "id": 233,
                                "name": "Identifier",
                                "src": "1298:3:3"
                              }
                            ],
                            "id": 235,
                            "name": "MemberAccess",
                            "src": "1298:16:3"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 236,
                                "name": "Identifier",
                                "src": "1315:3:3"
                              }
                            ],
                            "id": 237,
                            "name": "MemberAccess",
                            "src": "1315:10:3"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_RefungibleNFT_$312",
                                      "typeString": "contract RefungibleNFT"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 238,
                                    "name": "ElementaryTypeName",
                                    "src": "1327:7:3"
                                  }
                                ],
                                "id": 239,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1327:7:3"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -28,
                                  "type": "contract RefungibleNFT",
                                  "value": "this"
                                },
                                "id": 240,
                                "name": "Identifier",
                                "src": "1335:4:3"
                              }
                            ],
                            "id": 241,
                            "name": "FunctionCall",
                            "src": "1327:13:3"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 228,
                              "type": "uint256",
                              "value": "daiAmount"
                            },
                            "id": 242,
                            "name": "Identifier",
                            "src": "1341:9:3"
                          }
                        ],
                        "id": 243,
                        "name": "FunctionCall",
                        "src": "1298:53:3"
                      }
                    ],
                    "id": 244,
                    "name": "ExpressionStatement",
                    "src": "1298:53:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1120,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 245,
                            "name": "Identifier",
                            "src": "1358:5:3"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 246,
                                "name": "Identifier",
                                "src": "1364:3:3"
                              }
                            ],
                            "id": 247,
                            "name": "MemberAccess",
                            "src": "1364:10:3"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 199,
                              "type": "uint256",
                              "value": "shareAmount"
                            },
                            "id": 248,
                            "name": "Identifier",
                            "src": "1376:11:3"
                          }
                        ],
                        "id": 249,
                        "name": "FunctionCall",
                        "src": "1358:30:3"
                      }
                    ],
                    "id": 250,
                    "name": "ExpressionStatement",
                    "src": "1358:30:3"
                  }
                ],
                "id": 251,
                "name": "Block",
                "src": "1041:351:3"
              }
            ],
            "id": 252,
            "name": "FunctionDefinition",
            "src": "996:396:3"
          },
          {
            "attributes": {
              "functionSelector": "39913e09",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "withdrawProfits",
              "scope": 312,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 253,
                "name": "ParameterList",
                "src": "1420:2:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 254,
                "name": "ParameterList",
                "src": "1431:0:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
                                  "typeString": "literal_string \"only admin\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 255,
                            "name": "Identifier",
                            "src": "1438:7:3"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -15,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 256,
                                    "name": "Identifier",
                                    "src": "1446:3:3"
                                  }
                                ],
                                "id": 257,
                                "name": "MemberAccess",
                                "src": "1446:10:3"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 113,
                                  "type": "address",
                                  "value": "admin"
                                },
                                "id": 258,
                                "name": "Identifier",
                                "src": "1460:5:3"
                              }
                            ],
                            "id": 259,
                            "name": "BinaryOperation",
                            "src": "1446:19:3"
                          },
                          {
                            "attributes": {
                              "hexvalue": "6f6e6c792061646d696e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"only admin\"",
                              "value": "only admin"
                            },
                            "id": 260,
                            "name": "Literal",
                            "src": "1467:12:3"
                          }
                        ],
                        "id": 261,
                        "name": "FunctionCall",
                        "src": "1438:42:3"
                      }
                    ],
                    "id": 262,
                    "name": "ExpressionStatement",
                    "src": "1438:42:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_6ff946fc478d0a307519403e80cafe66856ebc8e0a7fa5356e73d820da7c0103",
                                  "typeString": "literal_string \"ICO not finished yet\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 263,
                            "name": "Identifier",
                            "src": "1487:7:3"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "timestamp",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -4,
                                      "type": "block",
                                      "value": "block"
                                    },
                                    "id": 264,
                                    "name": "Identifier",
                                    "src": "1495:5:3"
                                  }
                                ],
                                "id": 265,
                                "name": "MemberAccess",
                                "src": "1495:15:3"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 105,
                                  "type": "uint256",
                                  "value": "icoEnd"
                                },
                                "id": 266,
                                "name": "Identifier",
                                "src": "1513:6:3"
                              }
                            ],
                            "id": 267,
                            "name": "BinaryOperation",
                            "src": "1495:24:3"
                          },
                          {
                            "attributes": {
                              "hexvalue": "49434f206e6f742066696e697368656420796574",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"ICO not finished yet\"",
                              "value": "ICO not finished yet"
                            },
                            "id": 268,
                            "name": "Literal",
                            "src": "1521:22:3"
                          }
                        ],
                        "id": 269,
                        "name": "FunctionCall",
                        "src": "1487:57:3"
                      }
                    ],
                    "id": 270,
                    "name": "ExpressionStatement",
                    "src": "1487:57:3"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        272
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "daiBalance",
                          "scope": 310,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 271,
                            "name": "ElementaryTypeName",
                            "src": "1551:4:3"
                          }
                        ],
                        "id": 272,
                        "name": "VariableDeclaration",
                        "src": "1551:15:3"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "balanceOf",
                              "referencedDeclaration": 1261,
                              "type": "function (address) view external returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 111,
                                  "type": "contract IERC20",
                                  "value": "dai"
                                },
                                "id": 273,
                                "name": "Identifier",
                                "src": "1568:3:3"
                              }
                            ],
                            "id": 274,
                            "name": "MemberAccess",
                            "src": "1568:13:3"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_RefungibleNFT_$312",
                                      "typeString": "contract RefungibleNFT"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 275,
                                    "name": "ElementaryTypeName",
                                    "src": "1582:7:3"
                                  }
                                ],
                                "id": 276,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1582:7:3"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -28,
                                  "type": "contract RefungibleNFT",
                                  "value": "this"
                                },
                                "id": 277,
                                "name": "Identifier",
                                "src": "1590:4:3"
                              }
                            ],
                            "id": 278,
                            "name": "FunctionCall",
                            "src": "1582:13:3"
                          }
                        ],
                        "id": 279,
                        "name": "FunctionCall",
                        "src": "1568:28:3"
                      }
                    ],
                    "id": 280,
                    "name": "VariableDeclarationStatement",
                    "src": "1551:45:3"
                  },
                  {
                    "attributes": {},
                    "children": [
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": ">",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 272,
                              "type": "uint256",
                              "value": "daiBalance"
                            },
                            "id": 281,
                            "name": "Identifier",
                            "src": "1606:10:3"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 282,
                            "name": "Literal",
                            "src": "1619:1:3"
                          }
                        ],
                        "id": 283,
                        "name": "BinaryOperation",
                        "src": "1606:14:3"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "bool",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "transfer",
                                      "referencedDeclaration": 1271,
                                      "type": "function (address,uint256) external returns (bool)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 111,
                                          "type": "contract IERC20",
                                          "value": "dai"
                                        },
                                        "id": 284,
                                        "name": "Identifier",
                                        "src": "1633:3:3"
                                      }
                                    ],
                                    "id": 286,
                                    "name": "MemberAccess",
                                    "src": "1633:12:3"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 113,
                                      "type": "address",
                                      "value": "admin"
                                    },
                                    "id": 287,
                                    "name": "Identifier",
                                    "src": "1646:5:3"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 272,
                                      "type": "uint256",
                                      "value": "daiBalance"
                                    },
                                    "id": 288,
                                    "name": "Identifier",
                                    "src": "1653:10:3"
                                  }
                                ],
                                "id": 289,
                                "name": "FunctionCall",
                                "src": "1633:31:3"
                              }
                            ],
                            "id": 290,
                            "name": "ExpressionStatement",
                            "src": "1633:31:3"
                          }
                        ],
                        "id": 291,
                        "name": "Block",
                        "src": "1622:50:3"
                      }
                    ],
                    "id": 292,
                    "name": "IfStatement",
                    "src": "1603:69:3"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        294
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "unsoldShareBalance",
                          "scope": 310,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 293,
                            "name": "ElementaryTypeName",
                            "src": "1678:4:3"
                          }
                        ],
                        "id": 294,
                        "name": "VariableDeclaration",
                        "src": "1678:23:3"
                      },
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "-",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 103,
                              "type": "uint256",
                              "value": "icoShareSupply"
                            },
                            "id": 295,
                            "name": "Identifier",
                            "src": "1703:14:3"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 830,
                                  "type": "function () view returns (uint256)",
                                  "value": "totalSupply"
                                },
                                "id": 296,
                                "name": "Identifier",
                                "src": "1720:11:3"
                              }
                            ],
                            "id": 297,
                            "name": "FunctionCall",
                            "src": "1720:13:3"
                          }
                        ],
                        "id": 298,
                        "name": "BinaryOperation",
                        "src": "1703:30:3"
                      }
                    ],
                    "id": 299,
                    "name": "VariableDeclarationStatement",
                    "src": "1678:55:3"
                  },
                  {
                    "attributes": {},
                    "children": [
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": ">",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 294,
                              "type": "uint256",
                              "value": "unsoldShareBalance"
                            },
                            "id": 300,
                            "name": "Identifier",
                            "src": "1743:18:3"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 301,
                            "name": "Literal",
                            "src": "1764:1:3"
                          }
                        ],
                        "id": 302,
                        "name": "BinaryOperation",
                        "src": "1743:22:3"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1120,
                                      "type": "function (address,uint256)",
                                      "value": "_mint"
                                    },
                                    "id": 303,
                                    "name": "Identifier",
                                    "src": "1777:5:3"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 113,
                                      "type": "address",
                                      "value": "admin"
                                    },
                                    "id": 304,
                                    "name": "Identifier",
                                    "src": "1783:5:3"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 294,
                                      "type": "uint256",
                                      "value": "unsoldShareBalance"
                                    },
                                    "id": 305,
                                    "name": "Identifier",
                                    "src": "1791:18:3"
                                  }
                                ],
                                "id": 306,
                                "name": "FunctionCall",
                                "src": "1777:33:3"
                              }
                            ],
                            "id": 307,
                            "name": "ExpressionStatement",
                            "src": "1777:33:3"
                          }
                        ],
                        "id": 308,
                        "name": "Block",
                        "src": "1766:52:3"
                      }
                    ],
                    "id": 309,
                    "name": "IfStatement",
                    "src": "1740:78:3"
                  }
                ],
                "id": 310,
                "name": "Block",
                "src": "1431:390:3"
              }
            ],
            "id": 311,
            "name": "FunctionDefinition",
            "src": "1396:425:3"
          }
        ],
        "id": 312,
        "name": "ContractDefinition",
        "src": "201:1625:3"
      }
    ],
    "id": 313,
    "name": "SourceUnit",
    "src": "0:1826:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.3+commit.9bfce1f6.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-04-06T01:14:44.694Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}